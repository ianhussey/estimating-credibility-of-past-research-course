---
title: "Visualize Reliability"
format: 
  html:
    embed-resources: true
runtime: shiny
---

```{r, include=FALSE}

library(tidyverse)
library(ggplot2)
library(shiny)
library(janitor)

```

```{r, echo=FALSE}

sliderInput("reliability", "Reliability:", min = 0.00, max = 1, value = 0.7)

```

```{r, echo=FALSE}

renderPlot({
  reliability_input <- input$reliability
  reliability <- ifelse(reliability_input == 0, .Machine$double.eps, reliability_input) # Prevent division by zero
  
  mean_true <- 0
  sd_true <- 1
  
  # Calculate the standard deviation for the observed scores based on the reliability
  sd_observed <- sd_true / sqrt(reliability)
  
  x <- seq(-4 * sd_observed, 4 * sd_observed, length.out = 1000)
  
  curves <- tibble(
    x,
    y_true = dnorm(x, mean_true, sd_true),
    y_observed = dnorm(x, mean_true, sd_observed)
  )
  
  long_curves <- curves %>%
    pivot_longer(cols = c(y_true, y_observed), names_to = "distribution", values_to = "y") |>
    mutate(distribution = fct_relevel(distribution, "y_true", "y_observed"))
  
  ggplot(long_curves, aes(x, y, color = distribution, linetype = distribution)) +
    geom_line(linewidth = 1.2) +
    scale_color_manual(values = c("y_true" = "#3b528b", "y_observed" = "#5ec962"),
                       labels = c("True Scores (without error)", "Observed Scores (with error)"),
                       name = "Distribution") +
    scale_linetype_manual(values = c("y_true" = "solid", "y_observed" = "dashed"),
                          labels = c("True Scores (without error)", "Observed Scores (with error)"),
                          name = "Distribution") +
    labs(title = "Normal Distributions of True and Observed Scores",
         subtitle = paste("Reliability:", reliability),
         x = "Score",
         y = "Density") +
    coord_cartesian(xlim = c(-5, +5)) +
    theme_minimal() +
    theme(
      text = element_text(size = 20),
      plot.title = element_text(size = 22),
      axis.title = element_text(size = 20),
      axis.text = element_text(size = 18),
      legend.title = element_text(size = 18),
      legend.text = element_text(size = 16),
      legend.position = "bottom"
    )
}, height = 500, width = 900)

```


